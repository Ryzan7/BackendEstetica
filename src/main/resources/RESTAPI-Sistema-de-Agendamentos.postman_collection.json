{
	"info": {
		"_postman_id": "e5de299a-6348-42cd-8f3c-10779b1d70ee",
		"name": "REST API: Sistema de Agendamentos",
		"description": "# üöÄ Endpoints API RestFull - Sistema de Agendamentos Cest\n\nEssa cole√ß√£o √© respons√°vel por disponibilizar requisi√ß√µes http (GET, POST, PUT, DELETE) para a API do sistema de agendamentos da cl√≠nica de est√©tica do CEST\n\n---\n\n#### Como funciona:\n\nA cole√ß√£o est√° organizada em pastas, cada uma respons√°vel por uma entidade do sistema/banco de dados. Dentro de cada pasta existem as requisi√ß√µes nomeadas de acordo com a sua fun√ß√£o no sistema.\n\nNas requisi√ß√µes do m√©todo POST ser√° necess√°rio fornecer um 'body' no formato json, para que a requisi√ß√£o seja conclu√≠da com sucesso. Abaixo a estruta necess√°ria para cada requisi√ß√£o do tipo POST do sistema.\n\nüè∑Ô∏è Entidade Servi√ßo:\n\nRepons√°vel pelo cadastro de servi√ßos que ser√£o oferecidos pela cl√≠nica\n\n_Endpoint: localhost:8082/api-estetica/servicos_\n\n``` json\n{\n    \"nome\":\"nome-do-servi√ßo\",\n    \"descricao\":\"descri√ß√£o-do-servi√ßo\",\n    \"valor\":100, //Valor a ser cobrado no servi√ßo - Double\n    \"duracao\":40, //Dura√ß√£o do servi√ßo - Integer\n    \"especialidadeEnum\": \"PODOLOGIA\" // Especialidade do servi√ßo -> tipo ENUM\n}\n\n ```\n\nüè∑Ô∏è Entidade Usuario:\n\nRespons√°vel por cadastrar os usu√°rios que utilizar√£o o sistema \\[ADMIN, COORDENADORES....\\]\n\n_Endpoint: localhost:8082/api-estetica/usuarios_\n\n``` json\n{\n    \"nome\":\"nome-do-usuario\",\n    \"email\":\"email@email.com\",\n    \"username\":\"username-do-usuario\",\n    \"password\":\"senha-do-usuario\",\n    \"cargoEnum\":\"ADMINISTRADOR\"  // Cargo -> tipo ENUM\n}\n\n ```\n\nüè∑Ô∏è Entidade Profissional:\n\nRespons√°vel por cadastrar os profissionais que far√£o os atendimentos na clinica\n\n_Endpoint: localhost:8082/api-estetica/profissionais_\n\n``` json\n{\n    \"nome\":\"nome-do-usuario\",\n    \"email\":\"email@email.com\",\n    \"username\":\"username-do-usuario\",\n    \"password\":\"senha-do-usuario\",\n    \"cargoEnum\":\"ADMINISTRADOR\"  // Cargo -> tipo ENUM\n}\n\n ```\n\nüè∑Ô∏è Entidade Agendamento:\n\nRespons√°vel por cadastrar os agendamentos\n\n_Endpoint: localhost:8082/api-estetica/agendamentos_\n\n``` json\n{\n    \"cliente\": \"132059ab-53b0-4f78-92a8-5ee07d71ba16\", // UUID do cliente que est√° fazendo o agendamento\n    \"dataHora\": \"2025-07-29T14:00:00Z\", // Instant para a data e hora do agendamento\n    \"servicosID\": [ // Servi√ßos que far√£o parte daquele agendamento\n        \"dbb9de39-76ae-4482-95f3-432ea05d8824\", // UUID\n        \"0f46b43d-7233-4a05-ad22-016b165fe035\"\n    ]\n}\n\n ```\n\nüè∑Ô∏è Entidade Cliente:\n\nRespons√°vel por cadastrar os clientes\n\n_Endpoint: localhost:8082/api-estetica/clientes_\n\n``` json\n{\n    \"nome\": \"nome-do-cliente\",\n    \"telefone\": \"91912829922\",\n    \"cpf\": \"99999999999\"\n}\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21353897"
	},
	"item": [
		{
			"name": "Servi√ßos",
			"item": [
				{
					"name": "findAllServicos",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "createServicos",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "findById",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "editServico",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "deleteById",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "findByName",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuario",
			"item": [
				{
					"name": "findAllUsuario",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Profissional",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Agendamentos",
			"item": [
				{
					"name": "Create Agendamento",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "FindAll",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "FindById",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Cliente",
			"item": [
				{
					"name": "FindAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/info?id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"info"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/info",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"info"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "FindById",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "FindByName",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}